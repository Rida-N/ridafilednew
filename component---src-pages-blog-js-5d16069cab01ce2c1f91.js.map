{"version":3,"sources":["webpack://ridafieldnew/./src/components/Header.js","webpack://ridafieldnew/./src/components/AllBlogs.js","webpack://ridafieldnew/./src/components/AllTags.js","webpack://ridafieldnew/./src/pages/blog.js"],"names":["children","settings","className","text1","text2","useStaticQuery","allContentfulBlog","nodes","totalCount","map","blog","index","title","slug","postedOn","coverImage","timeToRead","childContentfulBlogMdContentTextNode","childMarkdownRemark","Link","key","to","G","image","getImage","alt","allTags","forEach","node","otherInfo","tags","tag","Object","entries","sort","a","b","getAllTags","tagName","tagNumber","Layout","seo","Header","S","src","formats","placeholder"],"mappings":"uwzDAyBA,IAhBe,SAAC,GAA4B,IAA1BA,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC1B,OACE,0BAAQC,UAAU,UACfF,EACAC,GACC,uBAAKC,UAAU,kBACb,uBAAKA,UAAU,eACb,0BAAKD,EAASE,OACbF,EAASG,OAAS,yBAAIH,EAASG,Y,6KCiE5C,EAhDiB,WACf,OAA8BC,oBA1BrB,cA0B2CC,kBAA5CC,EAAR,EAAQA,MAAR,EAAeC,WACf,OACE,gCACE,uBAAKN,UAAU,mBACb,gBAAC,MAAD,MACA,4BACE,gBAAC,MAAD,MACA,gBAAC,MAAD,QAGJ,uBAAKA,UAAU,aACZK,EAAME,KAAI,SAACC,EAAMC,GAChB,IACEC,EAOEF,EAPFE,MACAC,EAMEH,EANFG,KACAC,EAKEJ,EALFI,SACAC,EAIEL,EAJFK,WAEyBC,EAEvBN,EAHFO,qCACEC,oBAAuBF,WAI3B,OACE,gBAAC,EAAAG,KAAD,CAAMC,IAAG,QAAUT,EAASU,GAAE,IAAMR,EAAQX,UAAU,cACpD,gBAAC,EAAAoB,EAAD,CACEC,OAAOC,OAAST,GAChBb,UAAU,iBACVuB,IAAKb,IAEP,uBAAKV,UAAU,aACb,0BAAKU,GACL,yBACE,4BACE,gBAAC,MAAD,CAAgBV,UAAU,uBACzBY,GAEH,4BAAOE,EAAP,sB,UCZlB,EA3BgB,WACd,IAAMT,GAAQF,oBA7BL,cA6B2BC,kBAAkBC,MACtD,OACE,uBAAKL,UAAU,QAEb,uCACA,uBAAKA,UAAU,aAtBF,SAACK,GAClB,IAAMmB,EAAU,GAUhB,OATAnB,EAAMoB,SAAQ,SAACC,GACbA,EAAKC,UAAUC,KAAKH,SAAQ,SAACI,GACvBL,EAAQK,GACVL,EAAQK,KAERL,EAAQK,GAAO,QAIdC,OAAOC,QAAQP,GAASQ,MAAK,SAACC,EAAGC,GACtC,OAAOA,EAAE,GAAKD,EAAE,MAWXE,CAAW9B,GAAOE,KAAI,SAACsB,EAAKpB,GAC3B,IAAO2B,EAAsBP,EAA7B,GAAgBQ,EAAaR,EAA7B,GAEA,OACE,gBAAC,EAAAZ,KAAD,CACEjB,UAAU,iBACVmB,GAAE,SAAWiB,EACblB,IAAKT,GAEL,gBAAC,MAAD,CAAeT,UAAU,wBACzB,4BAAOoC,GACP,gCAAQC,EAAR,YCtBd,EArBa,WACX,OACE,gBAACC,EAAA,EAAD,CAAQC,IAAK,CAAE7B,MAAO,SAEpB,gBAAC8B,EAAA,EAAD,KACE,gBAAC,EAAAC,EAAD,CACEzC,UAAU,mBACVuB,IAAI,UACJmB,IAAI,4BACJC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,YAAY,YALd,uBAQF,uBAAK5C,UAAU,kBACb,gBAAC,EAAD,MACA,gBAAC,EAAD","file":"component---src-pages-blog-js-5d16069cab01ce2c1f91.js","sourcesContent":["import React from \"react\";\n\n/**\n *\n * @param {*} settings\n * video : src, title; text1,text2\n * image : alt, src, placeholder, layout; text1,text2\n * @returns\n */\nconst Header = ({ children, settings }) => {\n  return (\n    <header className=\"header\">\n      {children}\n      {settings && (\n        <div className=\"header-content\">\n          <div className=\"header-text\">\n            <h1>{settings.text1}</h1>\n            {settings.text2 && <p>{settings.text2}</p>}\n          </div>\n        </div>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby\";\nimport { RiCalendarLine } from \"react-icons/ri\";\nimport { BsFillGrid3X3GapFill } from \"react-icons/bs\";\nimport { FaThList } from \"react-icons/fa\";\nimport { IoSearchOutline } from \"react-icons/io5\";\n\nconst query = graphql`\n  {\n    allContentfulBlog(sort: { fields: postedOn, order: DESC }) {\n      nodes {\n        title\n        slug\n        postedOn(formatString: \"YYYY.MM.DD\")\n        coverImage {\n          gatsbyImageData(\n            formats: [AUTO, WEBP]\n            layout: FULL_WIDTH\n            placeholder: TRACED_SVG\n          )\n        }\n        childContentfulBlogMdContentTextNode {\n          childMarkdownRemark {\n            timeToRead\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\n\nconst AllBlogs = () => {\n  const { nodes, totalCount } = useStaticQuery(query).allContentfulBlog;\n  return (\n    <>\n      <div className=\"blog-show-icons\">\n        <IoSearchOutline />\n        <span>\n          <BsFillGrid3X3GapFill />\n          <FaThList />\n        </span>\n      </div>\n      <div className=\"blog-list\">\n        {nodes.map((blog, index) => {\n          const {\n            title,\n            slug,\n            postedOn,\n            coverImage,\n            childContentfulBlogMdContentTextNode: {\n              childMarkdownRemark: { timeToRead },\n            },\n          } = blog;\n\n          return (\n            <Link key={`blog_${index}`} to={`/${slug}`} className=\"blog-entry\">\n              <GatsbyImage\n                image={getImage(coverImage)}\n                className=\"blog-cover_img\"\n                alt={title}\n              />\n              <div className=\"blog-info\">\n                <h5>{title}</h5>\n                <p>\n                  <span>\n                    <RiCalendarLine className=\"blog-icon_calendar\" />\n                    {postedOn}\n                  </span>\n                  <span>{timeToRead} min read</span>\n                </p>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default AllBlogs;\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport { Link } from \"gatsby\";\nimport { AiOutlineTags } from \"react-icons/ai\";\nconst query = graphql`\n  {\n    allContentfulBlog(sort: { fields: postedOn, order: DESC }) {\n      nodes {\n        otherInfo {\n          tags\n        }\n      }\n    }\n  }\n`;\n\nconst getAllTags = (nodes) => {\n  const allTags = {};\n  nodes.forEach((node) => {\n    node.otherInfo.tags.forEach((tag) => {\n      if (allTags[tag]) {\n        allTags[tag]++;\n      } else {\n        allTags[tag] = 1;\n      }\n    });\n  });\n  return Object.entries(allTags).sort((a, b) => {\n    return b[1] - a[1]; //按tag的个数排序\n  });\n};\n\nconst AllTags = () => {\n  const nodes = useStaticQuery(query).allContentfulBlog.nodes;\n  return (\n    <div className=\"tags\">\n      {/* TODO 点击TAG的时候filter 显示指定TAG下的文章，然后All Blog后面显示选中的tag名 */}\n      <h4>All Blogs</h4>\n      <div className=\"tags-list\">\n        {getAllTags(nodes).map((tag, index) => {\n          const [tagName, tagNumber] = tag;\n          // const slug = slugify(tagName);\n          return (\n            <Link\n              className=\"tags-list-item\"\n              to={`/tags/${tagName}`}\n              key={index}\n            >\n              <AiOutlineTags className=\"tags-list-item_icon\" />\n              <span>{tagName}</span>\n              <span>({tagNumber})</span>\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default AllTags;\n","import React from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport Layout from \"../components/Layout\";\nimport Header from \"../components/Header\";\nimport AllBlogs from \"../components/AllBlogs\";\nimport AllTags from \"../components/AllTags\";\n\nconst Blog = () => {\n  return (\n    <Layout seo={{ title: \"Blog\" }}>\n      {/* TODO theme related */}\n      <Header>\n        <StaticImage\n          className=\"header-video-img\"\n          alt=\"flowers\"\n          src=\"../assets/images/temp.jpg\"\n          formats={[\"auto\", \"webp\", \"avif\"]}\n          placeholder=\"tracedSVG\"\n        />\n      </Header>\n      <div className=\"blog-container\">\n        <AllTags />\n        <AllBlogs />\n      </div>\n    </Layout>\n  );\n};\n\nexport default Blog;\n"],"sourceRoot":""}